import numpy as np
from PIL import Image

def file_to_grayscale_image(file, image_size=(128, 128)):
    """
    Convierte cualquier archivo en una imagen en escala de grises de un tamaño específico.

    :param file: Archivo en bytes.
    :param image_size: Tamaño deseado para la imagen de salida (ancho, alto).
    :return: Objeto PIL.Image en escala de grises.
    """
    # Leer el contenido del archivo como bytes
    file_content = file.read()

    # Convertir el contenido en una matriz de numpy
    byte_array = np.frombuffer(file_content, dtype=np.uint8)

    # Asegurarse de que la longitud se ajusta al tamaño de la imagen
    expected_size = image_size[0] * image_size[1]
    if len(byte_array) < expected_size:
        # Rellenar con ceros si hay menos datos que los necesarios
        byte_array = np.pad(byte_array, (0, expected_size - len(byte_array)), 'constant')
    elif len(byte_array) > expected_size:
        # Truncar si hay más datos que los necesarios
        byte_array = byte_array[:expected_size]

    # Redimensionar a la forma especificada
    byte_array = byte_array.reshape(image_size)

    # Convertir la matriz a una imagen en escala de grises
    img = Image.fromarray(byte_array, mode="L")
    return img
